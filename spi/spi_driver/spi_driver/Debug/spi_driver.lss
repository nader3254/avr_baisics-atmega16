
spi_driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000130  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000024  00800060  00000130  000001a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001c8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001f8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000234  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000089a  00000000  00000000  000002a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006dc  00000000  00000000  00000b3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003b4  00000000  00000000  0000121a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b8  00000000  00000000  000015d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003bb  00000000  00000000  00001688  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000176  00000000  00000000  00001a43  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00001bb9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e3       	ldi	r30, 0x30	; 48
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 38       	cpi	r26, 0x84	; 132
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 96 00 	jmp	0x12c	; 0x12c <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include "spi.h"
#define F_CPU 8000000UL

int main(void)
{
    spi_init(spi_master,8);
  82:	68 e0       	ldi	r22, 0x08	; 8
  84:	80 e0       	ldi	r24, 0x00	; 0
  86:	0e 94 4c 00 	call	0x98	; 0x98 <spi_init>
	unsigned char frame[]={35,32,1,0,8,19};
    while (1) 
    {
		spi_send_string("hello from atmega16");
  8a:	80 e6       	ldi	r24, 0x60	; 96
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	0e 94 84 00 	call	0x108	; 0x108 <spi_send_string>
		//spi_send_frame(frame);      
		//spi_send_byte('A');
		//char x       = spi_recieve_byte();
		//char frame[] = spi_recieve_frame(6);
		char* str      = spi_recieve_string();
  92:	0e 94 93 00 	call	0x126	; 0x126 <spi_recieve_string>
  96:	f9 cf       	rjmp	.-14     	; 0x8a <main+0x8>

00000098 <spi_init>:
			/* Return data register */
			temp[i] = SPDR;
	}
	return temp;
	
}
  98:	88 23       	and	r24, r24
  9a:	19 f0       	breq	.+6      	; 0xa2 <spi_init+0xa>
  9c:	81 30       	cpi	r24, 0x01	; 1
  9e:	39 f0       	breq	.+14     	; 0xae <spi_init+0x16>
  a0:	09 c0       	rjmp	.+18     	; 0xb4 <spi_init+0x1c>
  a2:	87 b3       	in	r24, 0x17	; 23
  a4:	80 6b       	ori	r24, 0xB0	; 176
  a6:	87 bb       	out	0x17, r24	; 23
  a8:	81 e5       	ldi	r24, 0x51	; 81
  aa:	8d b9       	out	0x0d, r24	; 13
  ac:	03 c0       	rjmp	.+6      	; 0xb4 <spi_init+0x1c>
  ae:	80 e4       	ldi	r24, 0x40	; 64
  b0:	87 bb       	out	0x17, r24	; 23
  b2:	8d b9       	out	0x0d, r24	; 13
  b4:	8d b1       	in	r24, 0x0d	; 13
  b6:	88 60       	ori	r24, 0x08	; 8
  b8:	8d b9       	out	0x0d, r24	; 13
  ba:	60 32       	cpi	r22, 0x20	; 32
  bc:	f1 f0       	breq	.+60     	; 0xfa <spi_init+0x62>
  be:	28 f4       	brcc	.+10     	; 0xca <spi_init+0x32>
  c0:	68 30       	cpi	r22, 0x08	; 8
  c2:	a1 f0       	breq	.+40     	; 0xec <spi_init+0x54>
  c4:	60 31       	cpi	r22, 0x10	; 16
  c6:	31 f0       	breq	.+12     	; 0xd4 <spi_init+0x3c>
  c8:	08 95       	ret
  ca:	60 34       	cpi	r22, 0x40	; 64
  cc:	39 f0       	breq	.+14     	; 0xdc <spi_init+0x44>
  ce:	60 38       	cpi	r22, 0x80	; 128
  d0:	49 f0       	breq	.+18     	; 0xe4 <spi_init+0x4c>
  d2:	08 95       	ret
  d4:	8d b1       	in	r24, 0x0d	; 13
  d6:	81 60       	ori	r24, 0x01	; 1
  d8:	8d b9       	out	0x0d, r24	; 13
  da:	08 95       	ret
  dc:	8d b1       	in	r24, 0x0d	; 13
  de:	82 60       	ori	r24, 0x02	; 2
  e0:	8d b9       	out	0x0d, r24	; 13
  e2:	08 95       	ret
  e4:	8d b1       	in	r24, 0x0d	; 13
  e6:	83 60       	ori	r24, 0x03	; 3
  e8:	8d b9       	out	0x0d, r24	; 13
  ea:	08 95       	ret
  ec:	8d b1       	in	r24, 0x0d	; 13
  ee:	81 60       	ori	r24, 0x01	; 1
  f0:	8d b9       	out	0x0d, r24	; 13
  f2:	8e b1       	in	r24, 0x0e	; 14
  f4:	81 60       	ori	r24, 0x01	; 1
  f6:	8e b9       	out	0x0e, r24	; 14
  f8:	08 95       	ret
  fa:	8d b1       	in	r24, 0x0d	; 13
  fc:	82 60       	ori	r24, 0x02	; 2
  fe:	8d b9       	out	0x0d, r24	; 13
 100:	8e b1       	in	r24, 0x0e	; 14
 102:	81 60       	ori	r24, 0x01	; 1
 104:	8e b9       	out	0x0e, r24	; 14
 106:	08 95       	ret

00000108 <spi_send_string>:
 108:	9c 01       	movw	r18, r24
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	08 c0       	rjmp	.+16     	; 0x11e <spi_send_string+0x16>
 10e:	f9 01       	movw	r30, r18
 110:	e9 0f       	add	r30, r25
 112:	f1 1d       	adc	r31, r1
 114:	80 81       	ld	r24, Z
 116:	8f b9       	out	0x0f, r24	; 15
 118:	9f 5f       	subi	r25, 0xFF	; 255
 11a:	77 9b       	sbis	0x0e, 7	; 14
 11c:	fe cf       	rjmp	.-4      	; 0x11a <spi_send_string+0x12>
 11e:	21 15       	cp	r18, r1
 120:	31 05       	cpc	r19, r1
 122:	a9 f7       	brne	.-22     	; 0x10e <spi_send_string+0x6>
 124:	08 95       	ret

00000126 <spi_recieve_string>:
char*  spi_recieve_string()
{
	
	return "string default";
	
 126:	84 e7       	ldi	r24, 0x74	; 116
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	08 95       	ret

0000012c <_exit>:
 12c:	f8 94       	cli

0000012e <__stop_program>:
 12e:	ff cf       	rjmp	.-2      	; 0x12e <__stop_program>
